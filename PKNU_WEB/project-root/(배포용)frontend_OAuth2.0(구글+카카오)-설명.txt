////////////////////////////////////////////////////////////////////////////////
//               1. OAuth 2.0 설명                  //
////////////////////////////////////////////////////////////////////////////////
 1. Open Authorization 2.0 개념
   - Open Authorization : 개방형 권한 위임 표준 프로토콜을 의미함
   - 인증(Authentication)이 아닌, 위임(Authorization)을 의미함
   - 즉, 서버 접근을 제3자에게 위임하여 처리하는 방식을 의미함
   - 뒤에 2.0은 버전을 의미함

 2. OAuth 개방형 표준 프로토콜 주요 제공 기관
   - 주로 구글, 카카오톡, MS를 통해 SNS 로그인 절차를 위임하여 사용

 3. OAuth의 주요 로그인 흐름
  - 일반 사용자 → 서버(React 등등..) 접근
  - "Google 또는 KaKao로 로그인" 방식 선택
  - 선택이후 부터는 "Google 또는 KaKao" 로그인 화면으로 전환됨
  - Google 또는 Kakao 인증 서버에서 사용자 로그인 및 동의
  - Authorization Code를 클라이언트(일반 사용자 PC)에게 전달
  - 클라이언트(일반 사용자 PC)가 서버(React 등등)로 전달
  - 서버(React 등등)가 "Google 또는 Kakao"에 Access Token 요청
  - "Google 또는 Kakao"는 → 서버(React 등등)에 Access Token 반환
  - 서버(React 등등)에서는 반환 받은 Access Token으로 사용자 정보 요청
  - 서버(React 등등)에서는 사용자 정보를 확인하여 로그인 완료 처리



////////////////////////////////////////////////////////////////////////////////
//               2. 구글 / 카카오 로그인 등록 절차 및 URL                  //
////////////////////////////////////////////////////////////////////////////////

[2-1] 구글 OAuth2 등록 절차
  1. 공식 사이트: https://console.cloud.google.com/
  2. Google Cloud 콘솔 접속 후 → 새 프로젝트 생성
    - 프로젝트 이름 : busan-pknu
  3. 왼쪽 상단의 메뉴 아이콘에서 API 및 서비스 > 사용자 인증 정보
  4. 상단 [사용자 인증 정보 만들기] 클릭
      - OAuth 클라이언트 ID 선택
      - [동의 화면 구성]이 안된 경우 먼저 동의 화면 구성.. 클릭하기
      - 앱 이름 : pknu
      - 사용자 지원 이메일 : 구글 이메일 작성
      - 대상 : 외부 체크
      - 측정항목 : OAuth 클라이언트 만들기 클릭
  5. 애플리케이션 유형 : 웹 애플리케이션 선택
  6. 승인된 리디렉션 URI 입력
     -> http://localhost:3000
  7. 클라이언트 ID (복사해 놓기 -> React에서 로그인 요청 시 사용)
	-> 738137669876-3sgpp7o9pa55l19hcf9l2k8qtdie14ba.apps.googleusercontent.com
    ## (설명 제외) 8. 클라이언트 보안 비밀번호 (SpringBoot에 설정할 예정)
  8. [확인] 버튼 클릭 



[2-2] 카카오 OAuth2 등록 절차
  1. 공식 사이트: https://developers.kakao.com
  2. 카카오 개발자 센터 회원가입 및 로그인
     - 상단 오른쪽 > 로그인 선택 > 카카오 로그인 > 회원가입
  3. 상단 중앙 > 내 애플리케이션 선택 > 애플리케이션 추가 선택
     - 앱이름 : pknu
     - 회사명 : 부경대학교
     - 카테고리 : 교육
     - pknu 선택
  4. 왼쪽 메뉴에서 플랫폼 선택
     - Web 플랫폼 등록 선택
       -> 사이트 도메인 입력 : http://localhost:3000
       -> 저장
     - 하단의 Web 밑에 Redirect URI를 등록 [등록하러 가기] 클릭
  5. Redirect URI 등록 선택 :
     - 활성화 설정 : ON으로 설정
       -> 예: http://localhost:3000

  6. 왼쪽 메뉴에서 카카오 로그인 > 동의항목 선택
     - 닉네임 및 프로필 사진 각각 설정 -> 필수 동의 체크 (기본 제공 데이터 - 별도의 심사 없이 수집 가능)
     - 이메일의 경우 계정으로 사용되기에 카카오에서 별도 심사를 하고 있음
        -> "실제 앱을 개발하여 해당 앱에 대한 별도의 카카오 심사를 거쳐야 이메일 수집이 가능해짐"
        -> 심사를 통과하여 수집이 가능하다 하더라도 
            --> 개인 사용자의 동의를 거치게 되며, 동의한 사용자에 한해서 수집됨

  7. 왼쪽 메뉴에서 [앱 키] 메뉴 클릭
     -  JavaScript 키 복사
	-> a531e81f796dc25fe17d3933f76338a1
 
  8. 왼쪽 메뉴에서 [보안] 메뉴 클릭
     - Client Secret 코드 생성 버튼 클릭
     - 활성화 상태 변경 : 활성화 선택
     - Client Secret 복사



-----------------------------------------------------------------------


<강의에 사용할 OAuth 구현 방식 설명>
 1. 단독 서버 전역관리 방식 사용
   -  React 단독서버로 Google 및 Kakao 로그인
   - 사용자 정보 전역 관리(AuthContext)
     --> 사용자 정보를 단독 서버 전체에서 전역적으로 사용
   - 로그인 후 라우팅
   - 로그아웃

 2. 개발환경 설정
  (Google 라이브러리 설치)
    - npm install @react-oauth/google
      -> React 프로젝트인 frontend 폴더 위치에서 설치해야 합니다.

  (Kakao JS 라이브러리 스크립트 추가)
     - /frontend/public/index.html 


 3. 구글 및 카카오 OAuth 구현에 사용되는 파일
  - /src/App.jsx (OAuth 구글관련 환경설정 및 구글/카카오 로그인/로그아웃 및 사용자정보 처리)

  - /src/pages/user/AuthContext.jsx 
    (서버 전역에서 사용자 정보 사용 가능하도록 사용자 정의 상태관리 훅 구현)

  - /src/components/user/GoogleLoginButton.jsx (구글 로그인 버튼 정의 및 사용자 정보 처리)
  - /src/components/user/KakaoLoginButton.jsx (카카오 로그인 버튼 정의 및 사용자 정보  처리)
  - /src/components/user/LogoutButton.jsx (구글 및 카카오 로그아웃 버튼 정의 및 사용자 정보  처리)











